{"version":3,"sources":["../src/view.js"],"names":["define","$","Repository","PagedContentFactory","PubSub","CustomEvents","Notification","Templates","CourseEvents","Selectors","PagedContentEvents","SELECTORS","COURSE_REGION","ACTION_HIDE_COURSE","ACTION_SHOW_COURSE","ACTION_ADD_FAVOURITE","ACTION_REMOVE_FAVOURITE","FAVOURITE_ICON","ICON_IS_FAVOURITE","ICON_NOT_FAVOURITE","PAGED_CONTENT_CONTAINER","TEMPLATES","COURSES_CARDS","COURSES_LIST","COURSES_SUMMARY","NOCOURSES","GROUPINGS","GROUPING_ALLINCLUDINGHIDDEN","GROUPING_ALL","GROUPING_INPROGRESS","GROUPING_FUTURE","GROUPING_PAST","GROUPING_FAVOURITES","GROUPING_HIDDEN","NUMCOURSES_PERPAGE","loadedPages","courseOffset","lastPage","lastLimit","namespace","getFilterValues","root","courseRegion","find","courseView","region","display","attr","grouping","sort","displaycategories","customfieldname","customfieldvalue","DEFAULT_PAGED_CONTENT_CONFIG","ignoreControlWhileLoading","controlPlacementBottom","persistentLimitKey","getMyCourses","filters","limit","getEnrolledCoursesByTimeline","offset","classification","getFavouriteIconContainer","courseId","getPagedContentContainer","index","getCourseId","hideFavouriteIcon","iconContainer","isFavouriteIcon","addClass","notFavourteIcon","removeClass","showFavouriteIcon","getAddFavouriteMenuItem","getRemoveFavouriteMenuItem","addToFavourites","removeAction","addAction","setCourseFavouriteState","then","success","publish","favourited","alert","catch","exception","removeFromFavourites","unfavorited","getHideCourseMenuItem","getShowCourseMenuItem","hideCourse","hideAction","showAction","setCourseHiddenState","hideElement","showCourse","status","updateUserPreferences","preferences","type","value","id","pagingBar","jumpto","parseInt","courseList","reducedCourse","courses","reduce","accumulator","current","push","newElement","slice","forEach","popElement","merge","length","pagedContentContainer","resetLastPageNumber","pagedContentPage","renderCourses","html","js","replaceNodeContents","page","remove","setFavouriteCourses","result","warnings","course","isfavourite","coursesData","currentTemplate","map","showcoursecategory","i","is_unit_page","startdate","enddate","formattedstartdate","Date","toLocaleDateString","formattedenddate","hyphen","render","nocoursesimg","setLimit","registerPagedEventHandlers","event","SET_ITEMS_PER_PAGE_LIMIT","subscribe","bind","initializePagedContent","Math","random","pagingLimit","itemsPerPage","active","totalCourseCount","filter","pagingOption","config","extend","eventNamespace","pagedContentPromise","createWithLimit","pagesData","actions","promises","pageData","currentPage","pageNumber","allItemsLoaded","pagePromise","nextPageStart","pageCourses","currentPageLength","remainingCourses","nextoffset","registerEventListeners","events","activate","on","e","data","favourite","target","closest","originalEvent","preventDefault","init","reset"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Manage the courses view for the overview block.\r\n *\r\n * @package    block_myoverview\r\n * @copyright  2018 Bas Brands <bas@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(\r\n[\r\n    'jquery',\r\n    'block_myoverview/repository',\r\n    'core/paged_content_factory',\r\n    'core/pubsub',\r\n    'core/custom_interaction_events',\r\n    'core/notification',\r\n    'core/templates',\r\n    'core_course/events',\r\n    'block_myoverview/selectors',\r\n    'core/paged_content_events',\r\n],\r\nfunction(\r\n    $,\r\n    Repository,\r\n    PagedContentFactory,\r\n    PubSub,\r\n    CustomEvents,\r\n    Notification,\r\n    Templates,\r\n    CourseEvents,\r\n    Selectors,\r\n    PagedContentEvents\r\n) {\r\n\r\n    var SELECTORS = {\r\n        COURSE_REGION: '[data-region=\"course-view-content\"]',\r\n        ACTION_HIDE_COURSE: '[data-action=\"hide-course\"]',\r\n        ACTION_SHOW_COURSE: '[data-action=\"show-course\"]',\r\n        ACTION_ADD_FAVOURITE: '[data-action=\"add-favourite\"]',\r\n        ACTION_REMOVE_FAVOURITE: '[data-action=\"remove-favourite\"]',\r\n        FAVOURITE_ICON: '[data-region=\"favourite-icon\"]',\r\n        ICON_IS_FAVOURITE: '[data-region=\"is-favourite\"]',\r\n        ICON_NOT_FAVOURITE: '[data-region=\"not-favourite\"]',\r\n        PAGED_CONTENT_CONTAINER: '[data-region=\"page-container\"]'\r\n\r\n    };\r\n\r\n    var TEMPLATES = {\r\n        COURSES_CARDS: 'block_myoverview/view-cards',\r\n        COURSES_LIST: 'block_myoverview/view-list',\r\n        COURSES_SUMMARY: 'block_myoverview/view-summary',\r\n        NOCOURSES: 'core_course/no-courses'\r\n    };\r\n\r\n    var GROUPINGS = {\r\n        GROUPING_ALLINCLUDINGHIDDEN: 'allincludinghidden',\r\n        GROUPING_ALL: 'all',\r\n        GROUPING_INPROGRESS: 'inprogress',\r\n        GROUPING_FUTURE: 'future',\r\n        GROUPING_PAST: 'past',\r\n        GROUPING_FAVOURITES: 'favourites',\r\n        GROUPING_HIDDEN: 'hidden'\r\n    };\r\n\r\n    var NUMCOURSES_PERPAGE = [12, 24, 48, 96, 0];\r\n\r\n    var loadedPages = [];\r\n\r\n    var courseOffset = 0;\r\n\r\n    var lastPage = 0;\r\n\r\n    var lastLimit = 0;\r\n\r\n    var namespace = null;\r\n\r\n    /**\r\n     * Get filter values from DOM.\r\n     *\r\n     * @param {object} root The root element for the courses view.\r\n     * @return {filters} Set filters.\r\n     */\r\n    var getFilterValues = function(root) {\r\n        var courseRegion = root.find(Selectors.courseView.region);\r\n        return {\r\n            display: courseRegion.attr('data-display'),\r\n            grouping: courseRegion.attr('data-grouping'),\r\n            sort: courseRegion.attr('data-sort'),\r\n            displaycategories: courseRegion.attr('data-displaycategories'),\r\n            customfieldname: courseRegion.attr('data-customfieldname'),\r\n            customfieldvalue: courseRegion.attr('data-customfieldvalue'),\r\n        };\r\n    };\r\n\r\n    // We want the paged content controls below the paged content area.\r\n    // and the controls should be ignored while data is loading.\r\n    var DEFAULT_PAGED_CONTENT_CONFIG = {\r\n        ignoreControlWhileLoading: true,\r\n        controlPlacementBottom: true,\r\n        persistentLimitKey: 'block_myoverview_user_paging_preference'\r\n    };\r\n\r\n    /**\r\n     * Get enrolled courses from backend.\r\n     *\r\n     * @param {object} filters The filters for this view.\r\n     * @param {int} limit The number of courses to show.\r\n     * @return {promise} Resolved with an array of courses.\r\n     */\r\n    var getMyCourses = function(filters, limit) {\r\n\r\n        return Repository.getEnrolledCoursesByTimeline({\r\n            offset: courseOffset,\r\n            limit: limit,\r\n            classification: filters.grouping,\r\n            sort: filters.sort,\r\n            customfieldname: filters.customfieldname,\r\n            customfieldvalue: filters.customfieldvalue\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Get the container element for the favourite icon.\r\n     *\r\n     * @param  {Object} root The course overview container\r\n     * @param  {Number} courseId Course id number\r\n     * @return {Object} The favourite icon container\r\n     */\r\n    var getFavouriteIconContainer = function(root, courseId) {\r\n        return root.find(SELECTORS.FAVOURITE_ICON + '[data-course-id=\"' + courseId + '\"]');\r\n    };\r\n\r\n    /**\r\n     * Get the paged content container element.\r\n     *\r\n     * @param  {Object} root The course overview container\r\n     * @param  {Number} index Rendered page index.\r\n     * @return {Object} The rendered paged container.\r\n     */\r\n    var getPagedContentContainer = function(root, index) {\r\n        return root.find('[data-region=\"paged-content-page\"][data-page=\"' + index + '\"]');\r\n    };\r\n\r\n    /**\r\n     * Get the course id from a favourite element.\r\n     *\r\n     * @param {Object} root The favourite icon container element.\r\n     * @return {Number} Course id.\r\n     */\r\n    var getCourseId = function(root) {\r\n        return root.attr('data-course-id');\r\n    };\r\n\r\n    /**\r\n     * Hide the favourite icon.\r\n     *\r\n     * @param {Object} root The favourite icon container element.\r\n     * @param  {Number} courseId Course id number.\r\n     */\r\n    var hideFavouriteIcon = function(root, courseId) {\r\n        var iconContainer = getFavouriteIconContainer(root, courseId);\r\n        var isFavouriteIcon = iconContainer.find(SELECTORS.ICON_IS_FAVOURITE);\r\n        isFavouriteIcon.addClass('hidden');\r\n        isFavouriteIcon.attr('aria-hidden', true);\r\n        var notFavourteIcon = iconContainer.find(SELECTORS.ICON_NOT_FAVOURITE);\r\n        notFavourteIcon.removeClass('hidden');\r\n        notFavourteIcon.attr('aria-hidden', false);\r\n    };\r\n\r\n    /**\r\n     * Show the favourite icon.\r\n     *\r\n     * @param  {Object} root The course overview container.\r\n     * @param  {Number} courseId Course id number.\r\n     */\r\n    var showFavouriteIcon = function(root, courseId) {\r\n        var iconContainer = getFavouriteIconContainer(root, courseId);\r\n        var isFavouriteIcon = iconContainer.find(SELECTORS.ICON_IS_FAVOURITE);\r\n        isFavouriteIcon.removeClass('hidden');\r\n        isFavouriteIcon.attr('aria-hidden', false);\r\n        var notFavourteIcon = iconContainer.find(SELECTORS.ICON_NOT_FAVOURITE);\r\n        notFavourteIcon.addClass('hidden');\r\n        notFavourteIcon.attr('aria-hidden', true);\r\n    };\r\n\r\n    /**\r\n     * Get the action menu item\r\n     *\r\n     * @param {Object} root  root The course overview container\r\n     * @param {Number} courseId Course id.\r\n     * @return {Object} The add to favourite menu item.\r\n     */\r\n    var getAddFavouriteMenuItem = function(root, courseId) {\r\n        return root.find('[data-action=\"add-favourite\"][data-course-id=\"' + courseId + '\"]');\r\n    };\r\n\r\n    /**\r\n     * Get the action menu item\r\n     *\r\n     * @param {Object} root  root The course overview container\r\n     * @param {Number} courseId Course id.\r\n     * @return {Object} The remove from favourites menu item.\r\n     */\r\n    var getRemoveFavouriteMenuItem = function(root, courseId) {\r\n        return root.find('[data-action=\"remove-favourite\"][data-course-id=\"' + courseId + '\"]');\r\n    };\r\n\r\n    /**\r\n     * Add course to favourites\r\n     *\r\n     * @param  {Object} root The course overview container\r\n     * @param  {Number} courseId Course id number\r\n     */\r\n    var addToFavourites = function(root, courseId) {\r\n        var removeAction = getRemoveFavouriteMenuItem(root, courseId);\r\n        var addAction = getAddFavouriteMenuItem(root, courseId);\r\n\r\n        setCourseFavouriteState(courseId, true).then(function(success) {\r\n            if (success) {\r\n                PubSub.publish(CourseEvents.favourited, courseId);\r\n                removeAction.removeClass('hidden');\r\n                addAction.addClass('hidden');\r\n                showFavouriteIcon(root, courseId);\r\n            } else {\r\n                Notification.alert('Starring course failed', 'Could not change favourite state');\r\n            }\r\n            return;\r\n        }).catch(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Remove course from favourites\r\n     *\r\n     * @param  {Object} root The course overview container\r\n     * @param  {Number} courseId Course id number\r\n     */\r\n    var removeFromFavourites = function(root, courseId) {\r\n        var removeAction = getRemoveFavouriteMenuItem(root, courseId);\r\n        var addAction = getAddFavouriteMenuItem(root, courseId);\r\n\r\n        setCourseFavouriteState(courseId, false).then(function(success) {\r\n            if (success) {\r\n                PubSub.publish(CourseEvents.unfavorited, courseId);\r\n                removeAction.addClass('hidden');\r\n                addAction.removeClass('hidden');\r\n                hideFavouriteIcon(root, courseId);\r\n            } else {\r\n                Notification.alert('Starring course failed', 'Could not change favourite state');\r\n            }\r\n            return;\r\n        }).catch(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Get the action menu item\r\n     *\r\n     * @param {Object} root  root The course overview container\r\n     * @param {Number} courseId Course id.\r\n     * @return {Object} The hide course menu item.\r\n     */\r\n    var getHideCourseMenuItem = function(root, courseId) {\r\n        return root.find('[data-action=\"hide-course\"][data-course-id=\"' + courseId + '\"]');\r\n    };\r\n\r\n    /**\r\n     * Get the action menu item\r\n     *\r\n     * @param {Object} root  root The course overview container\r\n     * @param {Number} courseId Course id.\r\n     * @return {Object} The show course menu item.\r\n     */\r\n    var getShowCourseMenuItem = function(root, courseId) {\r\n        return root.find('[data-action=\"show-course\"][data-course-id=\"' + courseId + '\"]');\r\n    };\r\n\r\n    /**\r\n     * Hide course\r\n     *\r\n     * @param  {Object} root The course overview container\r\n     * @param  {Number} courseId Course id number\r\n     */\r\n    var hideCourse = function(root, courseId) {\r\n        var hideAction = getHideCourseMenuItem(root, courseId);\r\n        var showAction = getShowCourseMenuItem(root, courseId);\r\n        var filters = getFilterValues(root);\r\n\r\n        setCourseHiddenState(courseId, true);\r\n\r\n        // Remove the course from this view as it is now hidden and thus not covered by this view anymore.\r\n        // Do only if we are not in \"All\" view mode where really all courses are shown.\r\n        if (filters.grouping != GROUPINGS.GROUPING_ALLINCLUDINGHIDDEN) {\r\n            hideElement(root, courseId);\r\n        }\r\n\r\n        hideAction.addClass('hidden');\r\n        showAction.removeClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Show course\r\n     *\r\n     * @param  {Object} root The course overview container\r\n     * @param  {Number} courseId Course id number\r\n     */\r\n    var showCourse = function(root, courseId) {\r\n        var hideAction = getHideCourseMenuItem(root, courseId);\r\n        var showAction = getShowCourseMenuItem(root, courseId);\r\n        var filters = getFilterValues(root);\r\n\r\n        setCourseHiddenState(courseId, null);\r\n\r\n        // Remove the course from this view as it is now shown again and thus not covered by this view anymore.\r\n        // Do only if we are not in \"All\" view mode where really all courses are shown.\r\n        if (filters.grouping != GROUPINGS.GROUPING_ALLINCLUDINGHIDDEN) {\r\n            hideElement(root, courseId);\r\n        }\r\n\r\n        hideAction.removeClass('hidden');\r\n        showAction.addClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Set the courses hidden status and push to repository\r\n     *\r\n     * @param  {Number} courseId Course id to favourite.\r\n     * @param  {Bool} status new hidden status.\r\n     * @return {Promise} Repository promise.\r\n     */\r\n    var setCourseHiddenState = function(courseId, status) {\r\n\r\n        // If the given status is not hidden, the preference has to be deleted with a null value.\r\n        if (status === false) {\r\n            status = null;\r\n        }\r\n        return Repository.updateUserPreferences({\r\n            preferences: [\r\n                {\r\n                    type: 'block_myoverview_hidden_course_' + courseId,\r\n                    value: status\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Reset the loadedPages dataset to take into account the hidden element\r\n     *\r\n     * @param {Object} root The course overview container\r\n     * @param {Number} id The course id number\r\n     */\r\n    var hideElement = function(root, id) {\r\n        var pagingBar = root.find('[data-region=\"paging-bar\"]');\r\n        var jumpto = parseInt(pagingBar.attr('data-active-page-number'));\r\n\r\n        // Get a reduced dataset for the current page.\r\n        var courseList = loadedPages[jumpto];\r\n        var reducedCourse = courseList.courses.reduce(function(accumulator, current) {\r\n            if (id != current.id) {\r\n                accumulator.push(current);\r\n            }\r\n            return accumulator;\r\n        }, []);\r\n\r\n        // Get the next page's data if loaded and pop the first element from it\r\n        if (loadedPages[jumpto + 1] != undefined) {\r\n            var newElement = loadedPages[jumpto + 1].courses.slice(0, 1);\r\n\r\n            // Adjust the dataset for the reset of the pages that are loaded\r\n            loadedPages.forEach(function(courseList, index) {\r\n                if (index > jumpto) {\r\n                    var popElement = [];\r\n                    if (loadedPages[index + 1] != undefined) {\r\n                        popElement = loadedPages[index + 1].courses.slice(0, 1);\r\n                    }\r\n\r\n                    loadedPages[index].courses = $.merge(loadedPages[index].courses.slice(1), popElement);\r\n                }\r\n            });\r\n\r\n\r\n            reducedCourse = $.merge(reducedCourse, newElement);\r\n        }\r\n\r\n        // Check if the next page is the last page and if it still has data associated to it\r\n        if (lastPage == jumpto + 1 && loadedPages[jumpto + 1].courses.length == 0) {\r\n            var pagedContentContainer = root.find('[data-region=\"paged-content-container\"]');\r\n            PagedContentFactory.resetLastPageNumber($(pagedContentContainer).attr('id'), jumpto);\r\n        }\r\n\r\n        loadedPages[jumpto].courses = reducedCourse;\r\n\r\n        // Reduce the course offset\r\n        courseOffset--;\r\n\r\n        // Render the paged content for the current\r\n        var pagedContentPage = getPagedContentContainer(root, jumpto);\r\n        renderCourses(root, loadedPages[jumpto]).then(function(html, js) {\r\n            return Templates.replaceNodeContents(pagedContentPage, html, js);\r\n        }).catch(Notification.exception);\r\n\r\n        // Delete subsequent pages in order to trigger the callback\r\n        loadedPages.forEach(function(courseList, index) {\r\n            if (index > jumpto) {\r\n                var page = getPagedContentContainer(root, index);\r\n                page.remove();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set the courses favourite status and push to repository\r\n     *\r\n     * @param  {Number} courseId Course id to favourite.\r\n     * @param  {Bool} status new favourite status.\r\n     * @return {Promise} Repository promise.\r\n     */\r\n    var setCourseFavouriteState = function(courseId, status) {\r\n\r\n        return Repository.setFavouriteCourses({\r\n            courses: [\r\n                    {\r\n                        'id': courseId,\r\n                        'favourite': status\r\n                    }\r\n                ]\r\n        }).then(function(result) {\r\n            if (result.warnings.length == 0) {\r\n                loadedPages.forEach(function(courseList) {\r\n                    courseList.courses.forEach(function(course, index) {\r\n                        if (course.id == courseId) {\r\n                            courseList.courses[index].isfavourite = status;\r\n                        }\r\n                    });\r\n                });\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }).catch(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Render the dashboard courses.\r\n     *\r\n     * @param {object} root The root element for the courses view.\r\n     * @param {array} coursesData containing array of returned courses.\r\n     * @return {promise} jQuery promise resolved after rendering is complete.\r\n     */\r\n    var renderCourses = function(root, coursesData) {\r\n\r\n        var filters = getFilterValues(root);\r\n\r\n        var currentTemplate = '';\r\n        if (filters.display == 'card') {\r\n            currentTemplate = TEMPLATES.COURSES_CARDS;\r\n        } else if (filters.display == 'list') {\r\n            currentTemplate = TEMPLATES.COURSES_LIST;\r\n        } else {\r\n            currentTemplate = TEMPLATES.COURSES_SUMMARY;\r\n        }\r\n\r\n        // Whether the course category should be displayed in the course item.\r\n        coursesData.courses = coursesData.courses.map(function(course) {\r\n            course.showcoursecategory = filters.displaycategories == 'on' ? true : false;\r\n            return course;\r\n        });\r\n\r\n        if (coursesData.courses.length) {\r\n//SU_AMEND START Add data for adding formatted start and end dates to courses on myoverview\r\n          for (var i in coursesData.courses) { //for every course listed...\r\n\r\n            if (coursesData.courses[i].is_unit_page == true && coursesData.courses[i].startdate !== 0 && coursesData.courses[i].enddate !== 0 && !coursesData.courses[i].formattedstartdate) { //if the course dates exist and haven't yet been converted to a human readable format, do so\r\n              var startdate = new Date(coursesData.courses[i].startdate*1000);\r\n              coursesData.courses[i].formattedstartdate = startdate.toLocaleDateString();\r\n              var enddate = new Date(coursesData.courses[i].enddate*1000);\r\n              coursesData.courses[i].formattedenddate = enddate.toLocaleDateString();\r\n              coursesData.courses[i].hyphen = '-';\r\n            }\r\n\r\n          }\r\n//SU_AMEND END\r\n\r\n            return Templates.render(currentTemplate, {\r\n                courses: coursesData.courses,\r\n            });\r\n        } else {\r\n            var nocoursesimg = root.find(Selectors.courseView.region).attr('data-nocoursesimg');\r\n            return Templates.render(TEMPLATES.NOCOURSES, {\r\n                nocoursesimg: nocoursesimg\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Return the callback to be passed to the subscribe event\r\n     *\r\n     * @param {Number} limit The paged limit that is passed through the event\r\n     */\r\n    var setLimit = function(limit) {\r\n        this.find(Selectors.courseView.region).attr('data-paging', limit);\r\n    };\r\n\r\n    /**\r\n     * Intialise the paged list and cards views on page load.\r\n     * Returns an array of paged contents that we would like to handle here\r\n     *\r\n     * @param {object} root The root element for the courses view\r\n     * @param {string} namespace The namespace for all the events attached\r\n     */\r\n    var registerPagedEventHandlers = function(root, namespace) {\r\n        var event = namespace + PagedContentEvents.SET_ITEMS_PER_PAGE_LIMIT;\r\n        PubSub.subscribe(event, setLimit.bind(root));\r\n    };\r\n\r\n    /**\r\n     * Intialise the courses list and cards views on page load.\r\n     *\r\n     * @param {object} root The root element for the courses view.\r\n     * @param {object} content The content element for the courses view.\r\n     */\r\n    var initializePagedContent = function(root) {\r\n        namespace = \"block_myoverview_\" + root.attr('id') + \"_\" + Math.random();\r\n\r\n        var pagingLimit = parseInt(root.find(Selectors.courseView.region).attr('data-paging'), 10);\r\n        var itemsPerPage = NUMCOURSES_PERPAGE.map(function(value) {\r\n            var active = false;\r\n            if (value == pagingLimit) {\r\n                active = true;\r\n            }\r\n\r\n            return {\r\n                value: value,\r\n                active: active\r\n            };\r\n        });\r\n\r\n        // Filter out all pagination options which are too large for the amount of courses user is enrolled in.\r\n        var totalCourseCount = parseInt(root.find(Selectors.courseView.region).attr('data-totalcoursecount'), 10);\r\n        itemsPerPage = itemsPerPage.filter(function(pagingOption) {\r\n            return pagingOption.value < totalCourseCount || pagingOption.value === 0;\r\n        });\r\n\r\n        var filters = getFilterValues(root);\r\n        var config = $.extend({}, DEFAULT_PAGED_CONTENT_CONFIG);\r\n        config.eventNamespace = namespace;\r\n\r\n        var pagedContentPromise = PagedContentFactory.createWithLimit(\r\n            itemsPerPage,\r\n            function(pagesData, actions) {\r\n                var promises = [];\r\n\r\n                pagesData.forEach(function(pageData) {\r\n                    var currentPage = pageData.pageNumber;\r\n                    var limit = (pageData.limit > 0) ? pageData.limit : 0;\r\n\r\n                    // Reset local variables if limits have changed\r\n                    if (lastLimit != limit) {\r\n                        loadedPages = [];\r\n                        courseOffset = 0;\r\n                        lastPage = 0;\r\n                    }\r\n\r\n                    if (lastPage == currentPage) {\r\n                        // If we are on the last page and have it's data then load it from cache\r\n                        actions.allItemsLoaded(lastPage);\r\n                        promises.push(renderCourses(root, loadedPages[currentPage]));\r\n                        return;\r\n                    }\r\n\r\n                    lastLimit = limit;\r\n\r\n                    // Get 2 pages worth of data as we will need it for the hidden functionality.\r\n                    if (loadedPages[currentPage + 1] == undefined) {\r\n                        if (loadedPages[currentPage] == undefined) {\r\n                            limit *= 2;\r\n                        }\r\n                    }\r\n\r\n                    var pagePromise = getMyCourses(\r\n                        filters,\r\n                        limit\r\n                    ).then(function(coursesData) {\r\n                        var courses = coursesData.courses;\r\n                        var nextPageStart = 0;\r\n                        var pageCourses = [];\r\n\r\n                        // If current page's data is loaded make sure we max it to page limit\r\n                        if (loadedPages[currentPage] != undefined) {\r\n                            pageCourses = loadedPages[currentPage].courses;\r\n                            var currentPageLength = pageCourses.length;\r\n                            if (currentPageLength < pageData.limit) {\r\n                                nextPageStart = pageData.limit - currentPageLength;\r\n                                pageCourses = $.merge(loadedPages[currentPage].courses, courses.slice(0, nextPageStart));\r\n                            }\r\n                        } else {\r\n                            // When the page limit is zero, there is only one page of courses, no start for next page.\r\n                            nextPageStart = pageData.limit || false;\r\n                            pageCourses = (pageData.limit > 0) ? courses.slice(0, pageData.limit) : courses;\r\n                        }\r\n\r\n                        // Finished setting up the current page\r\n                        loadedPages[currentPage] = {\r\n                            courses: pageCourses\r\n                        };\r\n\r\n                        // Set up the next page (if there is more than one page).\r\n                        var remainingCourses = nextPageStart !== false ? courses.slice(nextPageStart, courses.length) : [];\r\n                        if (remainingCourses.length) {\r\n                            loadedPages[currentPage + 1] = {\r\n                                courses: remainingCourses\r\n                            };\r\n                        }\r\n\r\n                        // Set the last page to either the current or next page\r\n                        if (loadedPages[currentPage].courses.length < pageData.limit || !remainingCourses.length) {\r\n                            lastPage = currentPage;\r\n                            actions.allItemsLoaded(currentPage);\r\n                        } else if (loadedPages[currentPage + 1] != undefined\r\n                            && loadedPages[currentPage + 1].courses.length < pageData.limit) {\r\n                            lastPage = currentPage + 1;\r\n                        }\r\n\r\n                        courseOffset = coursesData.nextoffset;\r\n                        return renderCourses(root, loadedPages[currentPage]);\r\n                    })\r\n                    .catch(Notification.exception);\r\n\r\n                    promises.push(pagePromise);\r\n                });\r\n\r\n                return promises;\r\n            },\r\n            config\r\n        );\r\n\r\n        pagedContentPromise.then(function(html, js) {\r\n            registerPagedEventHandlers(root, namespace);\r\n            return Templates.replaceNodeContents(root.find(Selectors.courseView.region), html, js);\r\n        }).catch(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Listen to, and handle events for  the myoverview block.\r\n     *\r\n     * @param {Object} root The myoverview block container element.\r\n     */\r\n    var registerEventListeners = function(root) {\r\n        CustomEvents.define(root, [\r\n            CustomEvents.events.activate\r\n        ]);\r\n\r\n        root.on(CustomEvents.events.activate, SELECTORS.ACTION_ADD_FAVOURITE, function(e, data) {\r\n            var favourite = $(e.target).closest(SELECTORS.ACTION_ADD_FAVOURITE);\r\n            var courseId = getCourseId(favourite);\r\n            addToFavourites(root, courseId);\r\n            data.originalEvent.preventDefault();\r\n        });\r\n\r\n        root.on(CustomEvents.events.activate, SELECTORS.ACTION_REMOVE_FAVOURITE, function(e, data) {\r\n            var favourite = $(e.target).closest(SELECTORS.ACTION_REMOVE_FAVOURITE);\r\n            var courseId = getCourseId(favourite);\r\n            removeFromFavourites(root, courseId);\r\n            data.originalEvent.preventDefault();\r\n        });\r\n\r\n        root.on(CustomEvents.events.activate, SELECTORS.FAVOURITE_ICON, function(e, data) {\r\n            data.originalEvent.preventDefault();\r\n        });\r\n\r\n        root.on(CustomEvents.events.activate, SELECTORS.ACTION_HIDE_COURSE, function(e, data) {\r\n            var target = $(e.target).closest(SELECTORS.ACTION_HIDE_COURSE);\r\n            var courseId = getCourseId(target);\r\n            hideCourse(root, courseId);\r\n            data.originalEvent.preventDefault();\r\n        });\r\n\r\n        root.on(CustomEvents.events.activate, SELECTORS.ACTION_SHOW_COURSE, function(e, data) {\r\n            var target = $(e.target).closest(SELECTORS.ACTION_SHOW_COURSE);\r\n            var courseId = getCourseId(target);\r\n            showCourse(root, courseId);\r\n            data.originalEvent.preventDefault();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Intialise the courses list and cards views on page load.\r\n     *\r\n     * @param {object} root The root element for the courses view.\r\n     */\r\n    var init = function(root) {\r\n        root = $(root);\r\n        loadedPages = [];\r\n        lastPage = 0;\r\n        courseOffset = 0;\r\n\r\n        initializePagedContent(root);\r\n\r\n        if (!root.attr('data-init')) {\r\n            registerEventListeners(root);\r\n            root.attr('data-init', true);\r\n        }\r\n    };\r\n\r\n    /**\r\n\r\n     * Reset the courses views to their original\r\n     * state on first page load.courseOffset\r\n     *\r\n     * This is called when configuration has changed for the event lists\r\n     * to cause them to reload their data.\r\n     *\r\n     * @param {Object} root The root element for the timeline view.\r\n     */\r\n    var reset = function(root) {\r\n        if (loadedPages.length > 0) {\r\n            loadedPages.forEach(function(courseList, index) {\r\n                var pagedContentPage = getPagedContentContainer(root, index);\r\n                renderCourses(root, courseList).then(function(html, js) {\r\n                    return Templates.replaceNodeContents(pagedContentPage, html, js);\r\n                }).catch(Notification.exception);\r\n            });\r\n        } else {\r\n            init(root);\r\n        }\r\n    };\r\n\r\n    return {\r\n        init: init,\r\n        reset: reset\r\n    };\r\n});\r\n"],"file":"view.min.js"}